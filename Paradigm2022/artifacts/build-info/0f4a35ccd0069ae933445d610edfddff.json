{
  "id": "0f4a35ccd0069ae933445d610edfddff",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/random/contracts/Random.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity 0.8.15;\n\ncontract Random {\n\n    bool public solved = false;\n\n    function _getRandomNumber() internal pure returns (uint256) {   // chosen by fair dice roll.\n        return 4;                                                   // guaranteed to be random.\n    }\n    \n    function solve(uint256 guess) public {\n        require(guess == _getRandomNumber());\n        solved = true;\n    }\n}"
      },
      "contracts/random/contracts/Setup.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity 0.8.15;\n\nimport \"./Random.sol\";\n\ncontract Setup {\n\n    Random public random;\n\n    constructor() {\n        random = new Random();\n    }\n\n    function isSolved() public view returns (bool) {\n        return random.solved();\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/random/contracts/Random.sol": {
        "Random": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "guess",
                  "type": "uint256"
                }
              ],
              "name": "solve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "solved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506101938061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063799320bb1461003b578063b8b8d35a14610059575b600080fd5b610043610075565b60405161005091906100da565b60405180910390f35b610073600480360381019061006e9190610130565b610086565b005b60008054906101000a900460ff1681565b61008e6100b6565b811461009957600080fd5b60016000806101000a81548160ff02191690831515021790555050565b60006004905090565b60008115159050919050565b6100d4816100bf565b82525050565b60006020820190506100ef60008301846100cb565b92915050565b600080fd5b6000819050919050565b61010d816100fa565b811461011857600080fd5b50565b60008135905061012a81610104565b92915050565b600060208284031215610146576101456100f5565b5b60006101548482850161011b565b9150509291505056fea26469706673582212201a343f8b6aa492c91f6c369946ddbac44e86c7a12710ccf2a64540a0063c483264736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 DUP1 PUSH2 0x3A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x799320BB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB8B8D35A EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8E PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D DUP2 PUSH2 0xFA JUMP JUMPDEST DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A DUP2 PUSH2 0x104 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0xF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP5 DUP3 DUP6 ADD PUSH2 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLVALUE EXTCODEHASH DUP12 PUSH11 0xA492C91F6C369946DDBAC4 0x4E DUP7 0xC7 LOG1 0x27 LT 0xCC CALLCODE 0xA6 GASLIMIT BLOCKHASH LOG0 MOD EXTCODECOPY BASEFEE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "65:375:0:-:0;;;109:5;88:26;;;;;;;;;;;;;;;;;;;;65:375;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_getRandomNumber_12": {
                  "entryPoint": 182,
                  "id": 12,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@solve_29": {
                  "entryPoint": 134,
                  "id": 29,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@solved_4": {
                  "entryPoint": 117,
                  "id": 4,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 304,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 203,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 218,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 191,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 245,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 260,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1449:2",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49:48:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "59:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "84:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "77:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "77:13:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "70:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "70:21:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "59:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "41:7:2",
                            "type": ""
                          }
                        ],
                        "src": "7:90:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "162:50:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "179:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "199:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "184:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "184:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "172:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "172:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "172:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "150:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "157:3:2",
                            "type": ""
                          }
                        ],
                        "src": "103:109:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "310:118:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "320:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "343:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "328:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "328:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "320:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "394:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "407:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "418:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "403:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "403:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "356:37:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "356:65:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "356:65:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "282:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "294:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "305:4:2",
                            "type": ""
                          }
                        ],
                        "src": "218:210:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "474:35:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "484:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "500:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "494:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "484:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "467:6:2",
                            "type": ""
                          }
                        ],
                        "src": "434:75:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "604:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "621:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "624:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "614:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "515:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "727:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "744:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "747:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "737:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "737:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "737:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "638:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "806:32:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "816:16:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "816:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "788:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "798:7:2",
                            "type": ""
                          }
                        ],
                        "src": "761:77:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "887:79:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "944:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "953:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "956:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "946:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "946:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "946:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "910:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "935:5:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "917:17:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "917:24:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "907:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "907:35:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "900:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "900:43:2"
                              },
                              "nodeType": "YulIf",
                              "src": "897:63:2"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "880:5:2",
                            "type": ""
                          }
                        ],
                        "src": "844:122:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1024:87:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1034:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1056:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1043:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1043:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:5:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1099:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:26:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1072:33:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1072:33:2"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1002:6:2",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1010:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1018:5:2",
                            "type": ""
                          }
                        ],
                        "src": "972:139:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1183:263:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1229:83:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1231:77:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1231:79:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1231:79:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1204:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1213:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1200:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1200:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1225:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1196:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1196:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1193:119:2"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1322:117:2",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1337:15:2",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1341:6:2",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1366:63:2",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1401:9:2"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1412:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1397:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1397:22:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1421:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1376:20:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1376:53:2"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1366:6:2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1153:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1164:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1176:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1117:329:2"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063799320bb1461003b578063b8b8d35a14610059575b600080fd5b610043610075565b60405161005091906100da565b60405180910390f35b610073600480360381019061006e9190610130565b610086565b005b60008054906101000a900460ff1681565b61008e6100b6565b811461009957600080fd5b60016000806101000a81548160ff02191690831515021790555050565b60006004905090565b60008115159050919050565b6100d4816100bf565b82525050565b60006020820190506100ef60008301846100cb565b92915050565b600080fd5b6000819050919050565b61010d816100fa565b811461011857600080fd5b50565b60008135905061012a81610104565b92915050565b600060208284031215610146576101456100f5565b5b60006101548482850161011b565b9150509291505056fea26469706673582212201a343f8b6aa492c91f6c369946ddbac44e86c7a12710ccf2a64540a0063c483264736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x799320BB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB8B8D35A EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8E PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D DUP2 PUSH2 0xFA JUMP JUMPDEST DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A DUP2 PUSH2 0x104 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0xF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP5 DUP3 DUP6 ADD PUSH2 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLVALUE EXTCODEHASH DUP12 PUSH11 0xA492C91F6C369946DDBAC4 0x4E DUP7 0xC7 LOG1 0x27 LT 0xCC CALLCODE 0xA6 GASLIMIT BLOCKHASH LOG0 MOD EXTCODECOPY BASEFEE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "65:375:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;88:26;;;;;;;;;;;;:::o;325:113::-;389:18;:16;:18::i;:::-;380:5;:27;372:36;;;;;;427:4;418:6;;:13;;;;;;;;;;;;;;;;;;325:113;:::o;121:194::-;172:7;229:1;222:8;;121:194;:::o;7:90:2:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:139::-;1018:5;1056:6;1043:20;1034:29;;1072:33;1099:5;1072:33;:::i;:::-;972:139;;;;:::o;1117:329::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:53;1421:7;1412:6;1401:9;1397:22;1376:53;:::i;:::-;1366:63;;1322:117;1117:329;;;;:::o"
            },
            "methodIdentifiers": {
              "solve(uint256)": "b8b8d35a",
              "solved()": "799320bb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"guess\",\"type\":\"uint256\"}],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"solved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/random/contracts/Random.sol\":\"Random\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/random/contracts/Random.sol\":{\"keccak256\":\"0x26e9395f291f8213bc59649a06808fb4a327d3dd90101b49316ae448a1da7c46\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5d9fcec438289a7b0561a5042eed154ffcea82dfc6b41137663e3cc3a7e1196\",\"dweb:/ipfs/QmNqySwGBLEpq3oCCgsxPVddTi1VB63zfVC8wCU3RoFrQ6\"]}},\"version\":1}"
        }
      },
      "contracts/random/contracts/Setup.sol": {
        "Setup": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "isSolved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "random",
              "outputs": [
                {
                  "internalType": "contract Random",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_47": {
                  "entryPoint": null,
                  "id": 47,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b565b6101cd8061033083390190565b6102968061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635ec01e4d1461003b57806364d98f6e14610059575b600080fd5b610043610077565b60405161005091906101b1565b60405180910390f35b61006161009b565b60405161006e91906101e7565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663799320bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d9190610233565b905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061017761017261016d84610132565b610152565b610132565b9050919050565b60006101898261015c565b9050919050565b600061019b8261017e565b9050919050565b6101ab81610190565b82525050565b60006020820190506101c660008301846101a2565b92915050565b60008115159050919050565b6101e1816101cc565b82525050565b60006020820190506101fc60008301846101d8565b92915050565b600080fd5b610210816101cc565b811461021b57600080fd5b50565b60008151905061022d81610207565b92915050565b60006020828403121561024957610248610202565b5b60006102578482850161021e565b9150509291505056fea264697066735822122032b88ce4b4f0874c25ccf256217d0d503bb6347861df861973b64f5cbf702bfa64736f6c634300080f0033608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506101938061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063799320bb1461003b578063b8b8d35a14610059575b600080fd5b610043610075565b60405161005091906100da565b60405180910390f35b610073600480360381019061006e9190610130565b610086565b005b60008054906101000a900460ff1681565b61008e6100b6565b811461009957600080fd5b60016000806101000a81548160ff02191690831515021790555050565b60006004905090565b60008115159050919050565b6100d4816100bf565b82525050565b60006020820190506100ef60008301846100cb565b92915050565b600080fd5b6000819050919050565b61010d816100fa565b811461011857600080fd5b50565b60008135905061012a81610104565b92915050565b600060208284031215610146576101456100f5565b5b60006101548482850161011b565b9150509291505056fea26469706673582212201a343f8b6aa492c91f6c369946ddbac44e86c7a12710ccf2a64540a0063c483264736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D SWAP1 PUSH2 0x7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8B JUMP JUMPDEST PUSH2 0x1CD DUP1 PUSH2 0x330 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x296 DUP1 PUSH2 0x9A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x799320BB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177 PUSH2 0x172 PUSH2 0x16D DUP5 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP3 PUSH2 0x15C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP2 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22D DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB8 DUP13 0xE4 0xB4 CREATE DUP8 0x4C 0x25 0xCC CALLCODE JUMP 0x21 PUSH30 0xD503BB6347861DF861973B64F5CBF702BFA64736F6C634300080F003360 DUP1 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 DUP1 PUSH2 0x3A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x799320BB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB8B8D35A EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8E PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D DUP2 PUSH2 0xFA JUMP JUMPDEST DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A DUP2 PUSH2 0x104 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0xF5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP5 DUP3 DUP6 ADD PUSH2 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLVALUE EXTCODEHASH DUP12 PUSH11 0xA492C91F6C369946DDBAC4 0x4E DUP7 0xC7 LOG1 0x27 LT 0xCC CALLCODE 0xA6 GASLIMIT BLOCKHASH LOG0 MOD EXTCODECOPY BASEFEE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "89:195:1:-:0;;;138:52;;;;;;;;;;171:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;162:6;;:21;;;;;;;;;;;;;;;;;;89:195;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@isSolved_57": {
                  "entryPoint": 155,
                  "id": 57,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@random_36": {
                  "entryPoint": 119,
                  "id": 36,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 542,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 563,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 472,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_contract$_Random_$30_to_t_address_fromStack": {
                  "entryPoint": 418,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 487,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_Random_$30__to_t_address__fromStack_reversed": {
                  "entryPoint": 433,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 460,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 306,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_contract$_Random_$30_to_t_address": {
                  "entryPoint": 400,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_address": {
                  "entryPoint": 382,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_uint160": {
                  "entryPoint": 348,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 338,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 514,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_bool": {
                  "entryPoint": 519,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2414:2",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "77:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:2",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "62:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "44:7:2",
                            "type": ""
                          }
                        ],
                        "src": "7:126:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "171:28:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "181:12:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "188:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "181:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "157:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "167:3:2",
                            "type": ""
                          }
                        ],
                        "src": "139:60:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "265:82:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "275:66:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "333:5:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint160",
                                          "nodeType": "YulIdentifier",
                                          "src": "315:17:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "315:24:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "306:8:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "306:34:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "288:17:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "288:53:2"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:9:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "245:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "255:9:2",
                            "type": ""
                          }
                        ],
                        "src": "205:142:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "413:66:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "423:50:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "467:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:30:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "436:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "423:9:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "393:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "403:9:2",
                            "type": ""
                          }
                        ],
                        "src": "353:126:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "558:66:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "568:50:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "612:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "581:30:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "581:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "568:9:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Random_$30_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "538:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "548:9:2",
                            "type": ""
                          }
                        ],
                        "src": "485:139:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "708:79:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "725:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "774:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_Random_$30_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "730:43:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "730:50:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "718:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "718:63:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "718:63:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_Random_$30_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "696:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "703:3:2",
                            "type": ""
                          }
                        ],
                        "src": "630:157:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "904:137:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "914:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "926:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "937:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "922:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "922:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "914:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1007:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1020:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1031:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1016:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1016:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_Random_$30_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "950:56:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "950:84:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "950:84:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_Random_$30__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "876:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "888:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "899:4:2",
                            "type": ""
                          }
                        ],
                        "src": "793:248:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1089:48:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1099:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1124:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1117:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1117:13:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1110:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1110:21:2"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1071:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1081:7:2",
                            "type": ""
                          }
                        ],
                        "src": "1047:90:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1202:50:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1219:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1239:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "1224:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1224:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1212:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1212:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1212:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1190:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1197:3:2",
                            "type": ""
                          }
                        ],
                        "src": "1143:109:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1350:118:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1360:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1372:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1383:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1368:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1368:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1360:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1434:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1447:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1458:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1443:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1443:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1396:37:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1396:65:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1396:65:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1322:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1334:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1345:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1258:210:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1514:35:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1524:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1540:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1534:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1534:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1524:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1507:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1474:75:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1644:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1661:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1664:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1654:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1654:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1654:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1555:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1767:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1784:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1787:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1777:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1777:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1777:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1678:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1841:76:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1895:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1904:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1907:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1897:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1897:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1897:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1864:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1886:5:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "1871:14:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1871:21:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1861:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1861:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1854:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1854:40:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1851:60:2"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1834:5:2",
                            "type": ""
                          }
                        ],
                        "src": "1801:116:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1983:77:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1993:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2008:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2002:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:5:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2048:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2024:23:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2024:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2024:30:2"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1961:6:2",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1969:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1977:5:2",
                            "type": ""
                          }
                        ],
                        "src": "1923:137:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2140:271:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2186:83:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "2188:77:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2188:79:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2188:79:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2161:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2170:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2157:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2157:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2182:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2153:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2153:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2150:119:2"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2279:125:2",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2294:15:2",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2308:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2298:6:2",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2323:71:2",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2366:9:2"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2377:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2362:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2362:22:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2386:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2333:28:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2333:61:2"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2323:6:2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2110:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2121:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2133:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2066:345:2"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Random_$30_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Random_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Random_$30_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Random_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Random_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80635ec01e4d1461003b57806364d98f6e14610059575b600080fd5b610043610077565b60405161005091906101b1565b60405180910390f35b61006161009b565b60405161006e91906101e7565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663799320bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d9190610233565b905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061017761017261016d84610132565b610152565b610132565b9050919050565b60006101898261015c565b9050919050565b600061019b8261017e565b9050919050565b6101ab81610190565b82525050565b60006020820190506101c660008301846101a2565b92915050565b60008115159050919050565b6101e1816101cc565b82525050565b60006020820190506101fc60008301846101d8565b92915050565b600080fd5b610210816101cc565b811461021b57600080fd5b50565b60008151905061022d81610207565b92915050565b60006020828403121561024957610248610202565b5b60006102578482850161021e565b9150509291505056fea264697066735822122032b88ce4b4f0874c25ccf256217d0d503bb6347861df861973b64f5cbf702bfa64736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x799320BB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177 PUSH2 0x172 PUSH2 0x16D DUP5 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP3 PUSH2 0x15C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP2 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22D DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB8 DUP13 0xE4 0xB4 CREATE DUP8 0x4C 0x25 0xCC CALLCODE JUMP 0x21 PUSH30 0xD503BB6347861DF861973B64F5CBF702BFA64736F6C634300080F003300 ",
              "sourceMap": "89:195:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;111:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;111:20;;;;;;;;;;;;:::o;196:86::-;237:4;260:6;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;253:22;;196:86;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:90::-;1081:7;1124:5;1117:13;1110:21;1099:32;;1047:90;;;:::o;1143:109::-;1224:21;1239:5;1224:21;:::i;:::-;1219:3;1212:34;1143:109;;:::o;1258:210::-;1345:4;1383:2;1372:9;1368:18;1360:26;;1396:65;1458:1;1447:9;1443:17;1434:6;1396:65;:::i;:::-;1258:210;;;;:::o;1555:117::-;1664:1;1661;1654:12;1801:116;1871:21;1886:5;1871:21;:::i;:::-;1864:5;1861:32;1851:60;;1907:1;1904;1897:12;1851:60;1801:116;:::o;1923:137::-;1977:5;2008:6;2002:13;1993:22;;2024:30;2048:5;2024:30;:::i;:::-;1923:137;;;;:::o;2066:345::-;2133:6;2182:2;2170:9;2161:7;2157:23;2153:32;2150:119;;;2188:79;;:::i;:::-;2150:119;2308:1;2333:61;2386:7;2377:6;2366:9;2362:22;2333:61;:::i;:::-;2323:71;;2279:125;2066:345;;;;:::o"
            },
            "methodIdentifiers": {
              "isSolved()": "64d98f6e",
              "random()": "5ec01e4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"isSolved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"internalType\":\"contract Random\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/random/contracts/Setup.sol\":\"Setup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/random/contracts/Random.sol\":{\"keccak256\":\"0x26e9395f291f8213bc59649a06808fb4a327d3dd90101b49316ae448a1da7c46\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5d9fcec438289a7b0561a5042eed154ffcea82dfc6b41137663e3cc3a7e1196\",\"dweb:/ipfs/QmNqySwGBLEpq3oCCgsxPVddTi1VB63zfVC8wCU3RoFrQ6\"]},\"contracts/random/contracts/Setup.sol\":{\"keccak256\":\"0x4cab8863ade99cde11e8d319f08a7069a4962d2174d22e14fa402a93a3bbd2e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1619b1c151428034b006523c3ffa6532b4835955d72313be6d0b2b2c1b506fe4\",\"dweb:/ipfs/QmYiq6GrSegFaznMVyCg4UYYPPyn2Qtmwa2wvy6tHaSLUt\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/random/contracts/Random.sol": {
        "ast": {
          "absolutePath": "contracts/random/contracts/Random.sol",
          "exportedSymbols": {
            "Random": [
              30
            ]
          },
          "id": 31,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Random",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 30,
              "linearizedBaseContracts": [
                30
              ],
              "name": "Random",
              "nameLocation": "74:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "799320bb",
                  "id": 4,
                  "mutability": "mutable",
                  "name": "solved",
                  "nameLocation": "100:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "88:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "88:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 3,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "109:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 11,
                    "nodeType": "Block",
                    "src": "181:134:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "34",
                          "id": 9,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "229:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "functionReturnParameters": 8,
                        "id": 10,
                        "nodeType": "Return",
                        "src": "222:8:0"
                      }
                    ]
                  },
                  "id": 12,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getRandomNumber",
                  "nameLocation": "130:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "146:2:0"
                  },
                  "returnParameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "172:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:9:0"
                  },
                  "scope": 30,
                  "src": "121:194:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 28,
                    "nodeType": "Block",
                    "src": "362:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 21,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 18,
                                "name": "guess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "380:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 19,
                                  "name": "_getRandomNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "389:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 20,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "389:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "380:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 17,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "372:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "372:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23,
                        "nodeType": "ExpressionStatement",
                        "src": "372:36:0"
                      },
                      {
                        "expression": {
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24,
                            "name": "solved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "418:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "427:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "418:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 27,
                        "nodeType": "ExpressionStatement",
                        "src": "418:13:0"
                      }
                    ]
                  },
                  "functionSelector": "b8b8d35a",
                  "id": 29,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "solve",
                  "nameLocation": "334:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "guess",
                        "nameLocation": "348:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "340:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "339:15:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "362:0:0"
                  },
                  "scope": 30,
                  "src": "325:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 31,
              "src": "65:375:0",
              "usedErrors": []
            }
          ],
          "src": "40:400:0"
        },
        "id": 0
      },
      "contracts/random/contracts/Setup.sol": {
        "ast": {
          "absolutePath": "contracts/random/contracts/Setup.sol",
          "exportedSymbols": {
            "Random": [
              30
            ],
            "Setup": [
              58
            ]
          },
          "id": 59,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 32,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:23:1"
            },
            {
              "absolutePath": "contracts/random/contracts/Random.sol",
              "file": "./Random.sol",
              "id": 33,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 31,
              "src": "65:22:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Setup",
              "contractDependencies": [
                30
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 58,
              "linearizedBaseContracts": [
                58
              ],
              "name": "Setup",
              "nameLocation": "98:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "5ec01e4d",
                  "id": 36,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "125:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "111:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Random_$30",
                    "typeString": "contract Random"
                  },
                  "typeName": {
                    "id": 35,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34,
                      "name": "Random",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "111:6:1"
                    },
                    "referencedDeclaration": 30,
                    "src": "111:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Random_$30",
                      "typeString": "contract Random"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "152:38:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "162:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Random_$30",
                              "typeString": "contract Random"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "171:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Random_$30_$",
                                "typeString": "function () returns (contract Random)"
                              },
                              "typeName": {
                                "id": 41,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 40,
                                  "name": "Random",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 30,
                                  "src": "175:6:1"
                                },
                                "referencedDeclaration": 30,
                                "src": "175:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Random_$30",
                                  "typeString": "contract Random"
                                }
                              }
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "171:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Random_$30",
                              "typeString": "contract Random"
                            }
                          },
                          "src": "162:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Random_$30",
                            "typeString": "contract Random"
                          }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "162:21:1"
                      }
                    ]
                  },
                  "id": 47,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "149:2:1"
                  },
                  "returnParameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "152:0:1"
                  },
                  "scope": 58,
                  "src": "138:52:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 56,
                    "nodeType": "Block",
                    "src": "243:39:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 52,
                              "name": "random",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "260:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Random_$30",
                                "typeString": "contract Random"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "solved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "260:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "260:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 51,
                        "id": 55,
                        "nodeType": "Return",
                        "src": "253:22:1"
                      }
                    ]
                  },
                  "functionSelector": "64d98f6e",
                  "id": 57,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isSolved",
                  "nameLocation": "205:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "213:2:1"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 57,
                        "src": "237:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "236:6:1"
                  },
                  "scope": 58,
                  "src": "196:86:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 59,
              "src": "89:195:1",
              "usedErrors": []
            }
          ],
          "src": "40:245:1"
        },
        "id": 1
      }
    }
  }
}
